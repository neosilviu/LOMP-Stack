{
  "backup_manager_title": "General Backup Manager",
  "backup_menu_backup": "Create user/domain backup",
  "backup_menu_restore": "Restore user/domain backup",
  "backup_menu_list": "List available backups",
  "backup_menu_rclone_backup": "Backup with rclone (cloud/remote)",
  "backup_menu_rclone_restore": "Restore with rclone (cloud/remote)",
  "backup_menu_cleanup": "Delete old backups",
  "backup_menu_schedule": "Schedule automatic backup (cron)",
  "backup_menu_exit": "Exit",
  "backup_menu_prompt": "Choose option: ",
  "backup_prompt_user": "User: ",
  "backup_prompt_domain": "Domain: ",
  "backup_prompt_path": "Backup path: ",
  "backup_prompt_srcdir": "Source directory: ",
  "backup_prompt_rclone": "Rclone remote: ",
  "backup_prompt_dstdir": "Destination directory: ",
  "backup_prompt_keep": "How many backups to keep (N): ",
  "backup_prompt_hour": "Schedule hour (0-23): ",
  "backup_prompt_min": "Schedule minute (0-59): ",
  "backup_start": "[START] Starting backup...",
  "backup_done": "[DONE] Backup completed successfully!",
  "backup_error": "[ERROR] Backup failed!",
  "backup_deleted": "[INFO] Old backup deleted.",
  "restore_start": "[START] Starting restore...",
  "restore_done": "[DONE] Restore completed!",
  "restore_checksum_error": "[ERROR] Backup integrity check failed!",
  "failback_start": "[FAILBACK] Restore failed, attempting failback...",
  "failback_error": "[FAILBACK-ERROR] No previous backup exists for this user/domain!",
  "cron_scheduled": "[INFO] Backup successfully scheduled in cron!",
  "apache_install": "[Apache] Installing Apache...",
  "apache_start": "[Apache] Starting Apache service...",
  "apache_stop": "[Apache] Stopping Apache service...",
  "apache_restart": "[Apache] Restarting Apache service...",
  "apache_status": "[Apache] Apache service status...",
  "web_type_unknown": "[WEB] Unknown webserver type",
  "nginx_install": "[Nginx] Installing Nginx...",
  "nginx_start": "[Nginx] Starting Nginx service...",
  "nginx_stop": "[Nginx] Stopping Nginx service...",
  "nginx_restart": "[Nginx] Restarting Nginx service...",
  "nginx_status": "[Nginx] Nginx service status...",
  "wp_version_info": "[WordPress] Version info:",
  "ols_start": "[OLS] Starting OpenLiteSpeed service...",
  "ols_stop": "[OLS] Stopping OpenLiteSpeed service...",
  "ols_restart": "[OLS] Restarting OpenLiteSpeed service...",
  "ols_status": "[OLS] OpenLiteSpeed service status...",
  "wp_not_installed": "WordPress is not installed in this location or version.php is missing.",
  "wp_install": "[WordPress] Install latest stable WordPress...",
  "wpcli_install": "[WP-CLI] Install latest stable WP-CLI...",
  "wpcli_fallback": "[WP-CLI] Could not fetch latest version, using fallback.",
  "auto_tunnel_id_required": "[ERROR] --tunnel-id is required for --auto",
  "auto_install_start": "[INFO] Starting automatic WordPress LOMP install (Cloudflare Tunnel, auto=$AUTO) ...",
  "auto_install_done": "[DONE] Automatic install finished! Access OpenLiteSpeed panel at http://IP:7080",
  "php_type_unknown": "[PHP] Unknown PHP type",
  "php_start": "[PHP] Starting php-fpm service...",
  "php_stop": "[PHP] Stopping php-fpm service...",
  "php_restart": "[PHP] Restarting php-fpm service...",
  "php_status": "[PHP] php-fpm service status...",
  "php_version_info": "[PHP] Version info:",
  "php_install": "[PHP] Install latest stable PHP and common extensions...",
  "olsphp_start": "[OLS] Starting lsphp service (php-fpm for OLS)...",
  "olsphp_stop": "[OLS] Stopping lsphp service (php-fpm for OLS)...",
  "olsphp_restart": "[OLS] Restarting lsphp service (php-fpm for OLS)...",
  "olsphp_status": "[OLS] lsphp service status (php-fpm for OLS)...",
  "olsphp_version_info": "[OLS] Version info (lsphp):",
  "olsphp_not_installed": "lsphp81 is not installed or not in PATH.",
  "olsphp_install": "[OLS] Install latest stable lsphp for OpenLiteSpeed...",
  "press_enter": "Press Enter to continue...",
  "ws_ols_selected": "✔️  OpenLiteSpeed (OLS) selected!",
  "ws_nginx_selected": "✔️  Nginx selected!",
  "ws_apache_selected": "✔️  Apache selected!",
  "invalid_option": "Invalid option!",
  "security_install": "[INFO] Installing Advanced Security...",
  "security_done": "[DONE] Advanced security enabled (fail2ban + strict UFW).",
  "redis_install": "[INFO] Installing Redis...",
  "redis_ok": "[OK] Redis is running fine.",
  "redis_error": "[ERROR] Redis is NOT running!",
  "redis_done": "[DONE] Redis installation finished.",
  "monitoring_install": "[INFO] Installing Monitoring Tools...",
  "monitoring_done": "[DONE] Netdata installed. Access http://IP:19999 for monitoring.",
  "cf_install": "[INFO] Installing Cloudflare Tunnel...",
  "cf_prompt_tunnel_id": "Enter Tunnel ID: ",
  "cf_done": "[DONE] Cloudflare Tunnel installed and configured.",
  "mysql_version_info": "[MySQL] Version info:",
  "mysql_not_installed": "MySQL is not installed or not in PATH.",
  "mysql_installing": "[MySQL] Installing latest stable MySQL...",
  "mariadb_version_info": "[MariaDB] Version info:",
  "mariadb_not_mariadb": "mysql is installed, but is not MariaDB.",
  "mariadb_not_installed": "MariaDB is not installed or not in PATH.",
  "mariadb_installing": "[MariaDB] Installing latest stable MariaDB...",
  "db_mariadb_selected": "✔️  MariaDB selected!",
  "db_mysql_selected": "✔️  MySQL selected!",
  "ai_agent_install": "Installing AI Dashboard...",
  "ai_agent_nodegit": "Installing Node.js + git...",
  "ai_agent_clone_fail": "[WARN] Repo already cloned or clone error. Continuing...",
  "ai_agent_cd_fail": "[FAIL] Cannot access /opt/ai-dashboard-demo",
  "ai_agent_npm_fail": "[WARN] npm install error. Continuing...",
  "ai_agent_build_fail": "[WARN] Build error. Continuing...",
  "ai_agent_done": "AI Dashboard installed and running on port 3000 (demo).",
  "cm_redis": "Install Redis Cache",
  "cm_ai": "Install AI Dashboard",
  "cm_cloudflare": "Install Cloudflare Tunnel",
  "cm_monitoring": "Install monitoring tools",
  "cm_security": "Install Advanced Security",
  "cm_check": "Check installed components",
  "cm_cleanup": "Clean temporary files",
  "cm_coredeps": "Check core dependencies (standard)",
  "cm_unused": "Clean unused packages",
  "cm_exit": "Exit",
  "opt1": "Standard Minimal - OpenLiteSpeed + WordPress (Recommended)",
  "opt2": "Ultra Minimal - Nginx + WordPress (Light)",
  "opt3": "Advanced - Custom configuration",
  "opt4": "Install optional packages",
  "opt5": "Exit",
  "update_all": "Update system (update all components)",
  "wsl_detail": "[WSL] Detailed install for Windows Subsystem for Linux...",
  "wsl_install_ols": "[WSL] Install OpenLiteSpeed",
  "wsl_install_nginx": "[WSL] Install Nginx",
  "wsl_install_apache": "[WSL] Install Apache",
  "wsl_install_php": "[WSL] Install PHP 8.1 and common extensions",
  "wsl_install_mariadb": "[WSL] Install MariaDB Server",
  "wsl_install_wp": "[WSL] Download and install WordPress in /var/www/wordpress",
  "wsl_manual_services": "[WSL] WARNING: WSL does not start services automatically! To start manually, use:",
  "wsl_configure_web": "[WSL] Configure web server to serve /var/www/wordpress (see docs for $ws_sel and WordPress)",
  "wsl_limitations": "[WSL] Some features may be limited (e.g. systemd, network, port mapping). For local development, WSL is OK. For production, use a VM or dedicated server.",
  "docker_install_detail": "[DOCKER] Detailed install for Docker container...",
  "docker_install_ols": "[DOCKER] Install OpenLiteSpeed",
  "docker_install_nginx": "[DOCKER] Install Nginx",
  "docker_install_apache": "[DOCKER] Install Apache",
  "docker_manual_services": "[DOCKER] Services do NOT start automatically! Use docker-compose or entrypoint to start $ws_sel, mariadb, php-fpm.",
  "docker_recommend": "[DOCKER] Recommended: use volumes for persistent data and expose required ports.",
  "proxmox_install_detail": "[PROXMOX] Detailed install for Proxmox...",
  "proxmox_kernel_detected": "[PROXMOX] Proxmox kernel detected.",
  "proxmox_install_ols": "[PROXMOX] Install OpenLiteSpeed",
  "proxmox_install_nginx": "[PROXMOX] Install Nginx",
  "proxmox_install_apache": "[PROXMOX] Install Apache",
  "proxmox_start_services": "[PROXMOX] Start services: $ws_sel, mariadb, php8.1-fpm",
  "proxmox_recommend_snapshot": "[PROXMOX] Recommended: create a snapshot before and after install for safety.",
  "debian_install_detail": "[DEBIAN] Detailed install for Debian...",
  "debian_install_ols": "[DEBIAN] Install OpenLiteSpeed",
  "debian_install_nginx": "[DEBIAN] Install Nginx",
  "debian_install_apache": "[DEBIAN] Install Apache",
  "debian_start_services": "[DEBIAN] Start services: $ws_sel, mariadb, php8.1-fpm",
  "debian_complete": "[DEBIAN] Install complete. Recommended: run apt update && apt upgrade periodically.",
  "ubuntu_install_detail": "[UBUNTU] Detailed install for Ubuntu...",
  "ubuntu_install_ols": "[UBUNTU] Install OpenLiteSpeed",
  "ubuntu_install_nginx": "[UBUNTU] Install Nginx",
  "ubuntu_install_apache": "[UBUNTU] Install Apache",
  "ubuntu_start_services": "[UBUNTU] Start services: $ws_sel, mariadb, php8.1-fpm",
  "ubuntu_complete": "[UBUNTU] Install complete. Recommended: use apt update && apt upgrade periodically.",
  "unknown_install_detail": "[UNKNOWN] Unknown platform, running generic steps...",
  "unknown_install_ols": "[UNKNOWN] Install OpenLiteSpeed",
  "unknown_install_nginx": "[UNKNOWN] Install Nginx",
  "unknown_install_apache": "[UNKNOWN] Install Apache",
  "unknown_start_services": "[UNKNOWN] Start services: $ws_sel, mariadb, php8.1-fpm",
  "unknown_check": "[UNKNOWN] Manually check compatibility and services after install.",
  "clean": "Clean install (removes everything)",
  "invalid": "Invalid option!",
  "start": "Starting WordPress LOMP install...",
  "adv": "Advanced install: you can choose web server, DB, security options.",
  "web": "Choose web server:",
  "web1": "OpenLiteSpeed (default)",
  "web2": "Nginx",
  "web3": "Apache",
  "db": "Choose database:",
  "db1": "MariaDB (default)",
  "db2": "MySQL",
  "db3": "External (do not install locally)",
  "db3_selected": "✔️  External selected! You will be prompted for connection details.",
  "ext_db_details": "Enter details for external database:",
  "ext_db_host": "External DB host:",
  "ext_db_port": "External DB port [3306]:",
  "ext_db_user": "External DB user:",
  "ext_db_pass": "External DB password:",
  "sec": "Enable firewall and fail2ban? (y/n, default y)",
  "sec2": "Advanced security? [y/n]: ",
  "done": "Install $MODE complete! Web: $WEB | DB: $DB | Security: $SEC",
  "clean_done": "Clean install finished!",
  "clean_confirm": "Clean install will remove all components and data. Confirm? (y/n)",
  "exit": "Exit installer.",
  "back": "🔙 Back",
  "db_back": "Back",
  "mode_title": "Install mode",
  "select_mode": "Choose install mode:",
  "confirm_hint": "(y/n) to confirm",
  "php_fpm": "PHP-FPM",
  "wordpress_core": "WordPress (core files)",
  "openlitespeed": "OpenLiteSpeed",
  "wp_cli": "WP-CLI",
  "ufw_firewall": "UFW Firewall",
  "monitoring_tools": "Monitoring Tools",
  "ai_dashboard": "AI Dashboard",
  "cloudflare_tunnel": "Cloudflare Tunnel",
  "schimbare_versiune_php": "Change PHP version",
  "schimbare_versiune_lsphp": "Change lsphp version",
  "adauga_extensii_php": "Add PHP extensions",
  "adauga_extensii_lsphp": "Add lsphp extensions",
  "inapoi": "Back",
  "meniu_pachete_php_lsphp_optionale": "PHP/lsphp optional packages menu",
  "versiune_invalida_sau_anulat": "Invalid version or cancelled.",
  "apasa_enter_pentru_a_continua": "Press Enter to continue...",
  "alege_opt_pkg": "Choose option [0-4]: ",
  "alege_versiunea_php": "Choose PHP version",
  "alege_versiunea_lsphp": "Choose lsphp version",
  "selecteaza_php_version": "Select [0-6]: ",
  "selecteaza_lsphp_version": "Select [0-6]: ",
  "show_component_versions": "Show component versions",
  "nicio_extensie_disponibila": "No extensions available for this PHP version!",
  "versiune_php_instalata": "Installed PHP version",
  "versiune_php_nu_este_instalata": "PHP version is not installed on the system:",
  "nicio_versiune_php_instalata": "No PHP version installed on the system!",
  "nicio_versiune_lsphp_instalata": "No lsphp version installed on the system!",
  "instalat": "(installed)",
  "neinstalata": "(not installed)",
  "descarca_si_instaleaza": "(download and install automatically)",
  "descarca_instaleaza_php": "Download and install PHP automatically",
  "instalat_din_sursa": "(installed from source)"
  ,
  "lscache_enable": "Enable LiteSpeed Cache in wp-config.php...",
  "htaccess_permissions": "Set .htaccess permissions for WordPress..."
}
